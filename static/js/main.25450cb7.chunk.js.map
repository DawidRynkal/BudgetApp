{"version":3,"sources":["index.css.js","components/Wrapper/Wrapper.js","components/Navigation/Navigation.css.js","components/Button/Button.css.js","components/Button/Button.js","components/Navigation/Navigation.js","components/LoadingIndicator/LoadingIndicator.js","components/ToggleableList/ToggleableList.js","components/Modal/Modal.css.js","components/Modal/Modal.js","components/DetailsModal/DetailsModal.js","data/constans/index.js","data/fetch/budget.fetch.js","data/fetch/common.fetch.js","data/fetch/index.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.css.js","utils/index.js","pages/Budget/components/BudgetCategoryList/ParentCateory.js","pages/Budget/components/BudgetCategoryList/CategoryItem.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.js","data/actions/budget.acions.js","data/constans/budget.constans.js","pages/Budget/components/BudgetTransactionList/BudgetTransactionList.css.js","pages/Budget/components/BudgetTransactionList/BudgetTransactionList.js","pages/Budget/components/AddTransactionForm/Styles.js","pages/Budget/components/AddTransactionForm/AddTransactionForm.js","pages/Budget/components/ShowTransactionDetails/ShowTransactionDetails.js","pages/Budget/Budget.css.js","pages/Budget/Budget.js","data/actions/common.action.js","data/constans/common.constans.js","App.js","serviceWorker.js","data/reducers/budget.reducer.js","data/reducers/common.reducer.js","data/reducers/index.js","data/middlewares/promise.middleware.js","index.js","data/store.js"],"names":["GlobalStyle","createGlobalStyle","normalize","Wrapper","styled","div","Container","NavigationWrapper","List","ul","RootButton","button","props","to","onClick","type","InlineButton","RegularButton","Button","variant","children","Component","useMemo","component","Navigation","items","RightElement","map","item","key","content","circle","keyframes","Root","LoadingIndicator","Item","onClickHandler","isActive","Trigger","ToggleableList","clickRef","useState","selectedItem","setSelectedItem","useEffect","current","id","aside","Content","CloseIcon","Modal","history","useHistory","handleCloseClick","goBack","createPortal","e","stopPropagation","document","querySelector","DetailsModal","LOADING_STATES","INITIAL","LOADING","LOADED","FAILED","fetchBudget","fetch","process","fetchBudgetedCategories","addTransaction","budgetId","values","method","headers","body","JSON","stringify","fetchAllCategories","budget","common","ParentCategory","CategoryItem","CategoryAmount","negative","formatCurrency","value","number","Number","Intl","NumberFormat","style","currency","format","name","categories","transactions","amount","categoryLeftValue","budgeted","reduce","acc","category","error","spentOnParentCategory","filter","transaction","find","categoryId","amountValue","spentOnCategory","totalLeft","connect","state","budgetedCategories","allCategories","setSelectedCategoryId","payload","budgetedCategoriesByParent","groupBy","parentCategory","handleClickParentCategoryRef","useRef","handleClearParentCategory","useCallback","handleSelectRestParentCategories","listItem","Object","entries","parentName","budgetedCategory","totalSpent","restToSpent","totalAmount","amountTaken","categoryExpenses","Math","max","notBudgetedTransactions","notBudgetedExpenses","avaibleForRestCategories","ListItem","li","selectedCategoryId","selectedTransactionId","setTransacionDetails","details","filteredTransactionsBySelectedParentCategory","some","groupedTransactions","Date","date","getUTCDate","description","string","DateTimeFormat","formatDate","identity","categoryNumber","btn","light","dark","css","btnDefault","btnPrimary","required","undefined","AddTransactionForm","onSubmit","noop","groupCategoriesBy","groupedCategoriesByParentName","label","Styles","render","handleSubmit","form","submitting","pristine","validate","input","meta","placeholder","touched","parse","parseFloat","step","className","disabled","reset","ShowTransactionDetails","Grid","commonState","loadingState","budgetState","promise","API","isLoaded","keys","length","path","then","App","fallback","exact","Boolean","window","location","hostname","match","initialState","action","newLoadingState","BUDGET_GET_REQUEST","BUDGETED_CATEGORIES_GET_REQUEST","BUDGET_TRANSACTION_ADD_REQUEST","ALL_CATEGORIES_GET_REQUEST","rootReducer","combineReducers","promiseMiddleware","next","rest","SUCCESS","FAILURE","REQUEST","response","json","data","catch","store","preloadedState","middlewares","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.25450cb7.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n${normalize}\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  li + li {\n    margin-left: 10px\n  }\n}\n`\nexport default GlobalStyle;","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\nwidth:100%;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nmax-width: 960px;\r\npadding-left: 10px;\r\npadding-right: 10px;\r\n`\r\nexport default Wrapper;","import styled from 'styled-components'\r\nimport Wrapper from '../Wrapper'\r\n\r\nexport const Container = styled.div`\r\nbackground-color: #4b0082;\r\ndisplay: flex;\r\npadding: 15px;\r\njustify-content: space-between;\r\n`;\r\n\r\nexport const NavigationWrapper = styled(Wrapper)`\r\ndisplay: flex;\r\njustify-content: space-between\r\n`\r\n\r\nexport const List = styled.ul`\r\ndisplay: flex;\r\n`","import styled from 'styled-components';\r\n\r\nexport const RootButton = styled.button`\r\ncolor: #E6E6FA;\r\ncursor: inherit;\r\nborder: none;\r\nbackground-color: transparent;\r\ncursor: ${props => props.to || props.onClick || props.type === 'submit' ? 'pointer' : 'default'};\r\n\r\n&:hover {\r\n    background:#E6E6FA;\r\n    color :black;\r\n    border-radius: 10px;\r\n}\r\n`;\r\n\r\nexport const InlineButton = styled(RootButton)`\r\n&:hover {\r\n    \r\n}\r\n`\r\n\r\nexport const RegularButton = styled(RootButton)`\r\nbackground: #FF6666;\r\ncolor: white;\r\nborder-radius: 3px;\r\nmargin-left: 13px;\r\n`","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { InlineButton, RegularButton } from './Button.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ variant, children, ...props }) {\r\n    const { to } = { ...props };\r\n    const Component = useMemo(() => {\r\n        switch (variant) {\r\n            case 'inline':\r\n                return InlineButton;\r\n            case 'regular':\r\n                return RegularButton;\r\n            default:\r\n                return 'regular';\r\n        }\r\n    }, [variant]);\r\n\r\n    const component = useMemo(() => (\r\n        <Component {...props}>\r\n            {children}\r\n        </Component>\r\n    ), [props, children])\r\n\r\n    return to ? (\r\n        <Link {...props} >\r\n            {component}\r\n        </Link>\r\n\r\n    ) :\r\n        <>\r\n            {component}\r\n        </>\r\n}\r\n\r\nButton.propTypes = {\r\n    variant: PropTypes.oneOf(['regular', 'inline'])\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport { List, Container } from './Navigation.css'\r\nimport { NavigationWrapper } from './Navigation.css'\r\nimport Button from '../Button/Button'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nfunction Navigation({ items = [], RightElement }) {\r\n    return (\r\n        <Container>\r\n            <NavigationWrapper>\r\n                <List>\r\n                    {items.map(item => {\r\n                        return (\r\n                            <li key={item.to}>\r\n                                <Button variant=\"inline\" to={item.to}>\r\n                                    {item.content}\r\n                                </Button>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </List>\r\n                {RightElement}\r\n            </NavigationWrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nNavigation.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst circle = keyframes`\r\n0 % {\r\n    opacity: 1;\r\n    backface- visibility: hidden;\r\ntransform: translateZ(0) scale(1.5,1.5);\r\n} 100% {\r\nopacity: 0;\r\nbackface-visibility: hidden;\r\ntransform: translateZ(0) scale(1,1);\r\n}\r\n`\r\n\r\nconst Root = styled.div`\r\n.ldio-l5qu7awpkb div > div {\r\n    position: absolute;\r\nwidth: 24px;\r\nheight: 24px;\r\nborder-radius: 50%;\r\nbackground:black;\r\nanimation: ${circle} 1s linear infinite;\r\n}.ldio-l5qu7awpkb div:nth-child(1) > div {\r\n    left: 148px;\r\ntop: 88px;\r\nanimation-delay: -0.875s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(1) {\r\n    transform: rotate(0deg);\r\ntransform-origin: 160px 100px;\r\n}.ldio-l5qu7awpkb div:nth-child(2) > div {\r\n    left: 130px;\r\ntop: 130px;\r\nanimation-delay: -0.75s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(2) {\r\n    transform: rotate(45deg);\r\ntransform-origin: 142px 142px;\r\n}.ldio-l5qu7awpkb div:nth-child(3) > div {\r\n    left: 88px;\r\ntop: 148px;\r\nanimation-delay: -0.625s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(3) {\r\n    transform: rotate(90deg);\r\ntransform-origin: 100px 160px;\r\n}.ldio-l5qu7awpkb div:nth-child(4) > div {\r\n    left: 46px;\r\ntop: 130px;\r\nanimation-delay: -0.5s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(4) {\r\n    transform: rotate(135deg);\r\ntransform-origin: 58px 142px;\r\n}.ldio-l5qu7awpkb div:nth-child(5) > div {\r\n    left: 28px;\r\ntop: 88px;\r\nanimation-delay: -0.375s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(5) {\r\n    transform: rotate(180deg);\r\ntransform-origin: 40px 100px;\r\n}.ldio-l5qu7awpkb div:nth-child(6) > div {\r\n    left: 46px;\r\ntop: 46px;\r\nanimation-delay: -0.25s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(6) {\r\n    transform: rotate(225deg);\r\ntransform-origin: 58px 58px;\r\n}.ldio-l5qu7awpkb div:nth-child(7) > div {\r\n    left: 88px;\r\ntop: 28px;\r\nanimation-delay: -0.125s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(7) {\r\n    transform: rotate(270deg);\r\ntransform-origin: 100px 40px;\r\n}.ldio-l5qu7awpkb div:nth-child(8) > div {\r\n    left: 130px;\r\ntop: 46px;\r\nanimation-delay: 0s;\r\n}\r\n.ldio-l5qu7awpkb > div:nth-child(8) {\r\n    transform: rotate(315deg);\r\ntransform-origin: 142px 58px;\r\n}\r\n.loadingio-spinner-spin-obbqbqd8oh {\r\n    width: 200px;\r\nheight: 200px;\r\ndisplay: inline-block;\r\noverflow: hidden;\r\nbackground: #ffffff;\r\n}\r\n.ldio-l5qu7awpkb {\r\n    width: 100%;\r\nheight: 100%;\r\nposition: relative;\r\ntransform: translateZ(0) scale(1);\r\nbackface-visibility: hidden;\r\ntransform-origin: 0 0; /* see note above */\r\n}\r\n.ldio-l5qu7awpkb div {box - sizing: content-box; }\r\n`\r\n\r\n\r\nfunction LoadingIndicator() {\r\n    return (\r\n        <Root></Root>\r\n\r\n    )\r\n}\r\n\r\nexport default LoadingIndicator;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Item = ({ item, onClickHandler, isActive }) =>\r\n    (\r\n        <div>\r\n            <item.Trigger onClick={onClickHandler} />\r\n            {isActive && item.children}\r\n        </div>)\r\n\r\n\r\nfunction ToggleableList({ items, clickRef }) {\r\n    const [selectedItem, setSelectedItem] = useState();\r\n\r\n    useEffect(() => {\r\n        clickRef.current = setSelectedItem;\r\n    }, [clickRef, setSelectedItem])\r\n\r\n\r\n    return (\r\n        <>\r\n            {items.map(item => {\r\n                return (\r\n                    <Item\r\n                        key={item.id}\r\n                        item={item}\r\n                        onClickHandler={setSelectedItem}\r\n                        isActive={selectedItem === item.id}\r\n                    />\r\n                )\r\n            }\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToggleableList;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\nbackground-color: rgba(0,0,0,0.5);\r\nposition: fixed;\r\nheight: 100%;\r\nwidth:100%;\r\ntop: 0;\r\nleft: 0;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nz-index: 100;\r\n`;\r\n\r\nexport const Content = styled.div`\r\nbackground: #fff;\r\nposition: absolute;\r\nmargin: auto;\r\nwidth: 350px;\r\nheight: 280px;\r\nbox-shadow:  gray;\r\npadding: 20px;\r\ntext-align: center;\r\n`;\r\n\r\nexport const CloseIcon = styled.div`\r\nposition: absolute;\r\nright: 7px;\r\ntop: 5px;\r\ncursor: pointer;\r\nfont-size: 20px;\r\n`;","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { Wrapper, Content, CloseIcon } from './Modal.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Modal({ children }) {\r\n    let history = useHistory();\r\n    const handleCloseClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return createPortal(\r\n        <Wrapper onClick={handleCloseClick}>\r\n            <Content onClick={e => e.stopPropagation()}>\r\n                <CloseIcon onClick={handleCloseClick}>X</CloseIcon>\r\n                {children}\r\n            </Content>\r\n        </Wrapper>\r\n        , document.querySelector('#modal')\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Content, CloseIcon, Wrapper } from '../Modal/Modal.css';\r\nimport { createPortal } from 'react-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction DetailsModal({ children }) {\r\n    let history = useHistory();\r\n    const handleCloseClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return createPortal(\r\n        <Wrapper onClick={handleCloseClick}>\r\n            <Content onClick={e => e.stopPropagation()}>\r\n                <CloseIcon onClick={handleCloseClick}>X</CloseIcon>\r\n                {children}\r\n            </Content>\r\n        </Wrapper>\r\n        , document.querySelector('#modal')\r\n    )\r\n}\r\nexport default DetailsModal;","export * from './budget.constans';\r\nexport * from './common.constans';\r\n\r\nexport const LOADING_STATES = {\r\n    INITIAL: 'INITIAL',\r\n    LOADING: 'LOADING',\r\n    LOADED: 'LOADED',\r\n    FAILED: 'FAILED',\r\n};\r\n\r\nexport default {\r\n    LOADING_STATES,\r\n};","\r\nexport const fetchBudget = (id) => {\r\n    const promise = fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`);\r\n\r\n    return promise;\r\n}\r\n\r\nexport const fetchBudgetedCategories = (id) => {\r\n    const promise = fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/budgetCategories`);\r\n\r\n    return promise;\r\n}\r\n\r\nexport const addTransaction = ({ budgetId, values }) => {\r\n    const promise = fetch(`${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n\r\n    return promise;\r\n}\r\n\r\n","\r\n\r\nexport const fetchAllCategories = () => {\r\n    const promise = fetch(`${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`);\r\n\r\n    return promise;\r\n}","import * as budget from './budget.fetch';\r\nimport * as common from './common.fetch';\r\n\r\nexport default {\r\n    budget,\r\n    common,\r\n}","import styled from 'styled-components'\r\n\r\nexport const ParentCategory = styled.div`\r\nborder: 1px solid black;\r\nmargin-bottom: 1px;\r\npadding: 10px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\n`;\r\n\r\nexport const CategoryItem = styled.div`\r\nborder: 1px solid black;\r\n\r\n`;\r\n\r\nexport const CategoryAmount = styled.div`\r\nfont-weight: 700;\r\ncolor: ${({ negative }) => negative ? 'red' : '#00CC00'}\r\n`;\r\n","export const formatCurrency = (value) => {\r\n    const number = Number(value);\r\n\r\n    return new Intl.NumberFormat('pl', { style: 'currency', currency: 'PLN' }).format(number);\r\n}\r\n\r\nexport const formatDate = string => {\r\n    const date = new Date(string);\r\n\r\n    return new Intl.DateTimeFormat('pl').format(date)\r\n}","import React from 'react';\r\nimport { ParentCategory as Root, CategoryAmount } from './BudgetCategoryList.css'\r\nimport { useMemo } from 'react';\r\nimport { formatCurrency } from 'utils/index'\r\n\r\n\r\nfunction ParentCategory({ name, onClick, categories, transactions, amount }) {\r\n    const categoryLeftValue = useMemo(() => {\r\n        if (!!amount) return null;\r\n\r\n        const budgeted = (() => {\r\n            try {\r\n                return categories.reduce((acc, category) => acc + category.budget, 0);\r\n            } catch (error) {\r\n                return null;\r\n            }\r\n\r\n        })();\r\n\r\n        const parentCategoryTransactions = transactions.filter(transaction => categories.find(category => category.categoryId === transaction.categoryId));\r\n\r\n        const spentOnParentCategory = parentCategoryTransactions.reduce((acc, transaction) => acc + transaction.amount, 0);\r\n\r\n        const totalLeft = budgeted ? budgeted - spentOnParentCategory : null;\r\n\r\n        return totalLeft;\r\n    }, [categories, transactions, amount])\r\n\r\n    const amountValue = useMemo(\r\n        () => amount || categoryLeftValue,\r\n        [categoryLeftValue, amount]\r\n    )\r\n    return (\r\n        <Root onClick={onClick}>\r\n            <span>{name}</span>\r\n            <CategoryAmount negative={amountValue < 0}>{formatCurrency(amountValue)}</CategoryAmount>\r\n        </Root>\r\n    )\r\n}\r\n\r\nexport default ParentCategory;","import React from 'react';\r\nimport { CategoryItem as Root, CategoryAmount } from './BudgetCategoryList.css';\r\nimport { formatCurrency } from 'utils';\r\n\r\nfunction CategoryItem({ name, item, transactions }) {\r\n    const categoryTransactions = transactions\r\n        .filter(transaction => transaction.id === item.id);\r\n\r\n    const spentOnCategory = categoryTransactions.reduce((acc, transaction) => acc + transaction.amount, 0);\r\n\r\n    const totalLeft = item.budget - spentOnCategory;\r\n\r\n    return (\r\n        <Root>\r\n            <span>{name}</span>\r\n            <CategoryAmount negative={totalLeft < 0}>{formatCurrency(totalLeft)}</CategoryAmount>\r\n        </Root>\r\n    )\r\n}\r\n\r\nexport default CategoryItem;","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { groupBy } from 'lodash';\r\nimport ToggleableList from 'components/ToggleableList';\r\nimport ParentCategory from './ParentCateory';\r\nimport CategoryItem from './CategoryItem';\r\nimport 'styled-components/macro';\r\nimport { setSelectedCategoryId } from 'data/actions/budget.acions'\r\nimport { useMemo, useCallback } from 'react';\r\n\r\nfunction BudgetCategoryList({ budgetedCategories, allCategories, budget, setSelectedCategoryId }) {\r\n    const budgetedCategoriesByParent = useMemo(\r\n        () => groupBy(\r\n            budgetedCategories, item => allCategories.find(category => category.id === item.categoryId).parentCategory.name),\r\n        [budgetedCategories, allCategories]\r\n    );\r\n\r\n    const handleClickParentCategoryRef = useRef(null)\r\n\r\n    const handleClearParentCategory = useCallback(() => {\r\n        setSelectedCategoryId();\r\n        handleClickParentCategoryRef.current();\r\n    },\r\n        [setSelectedCategoryId, handleClickParentCategoryRef]\r\n    )\r\n\r\n    const handleSelectRestParentCategories = useCallback(() => {\r\n        setSelectedCategoryId(null);\r\n        handleClickParentCategoryRef.current();\r\n    },\r\n        [setSelectedCategoryId, handleClickParentCategoryRef]\r\n    )\r\n\r\n\r\n\r\n    const listItem = useMemo(() => Object.entries(budgetedCategoriesByParent).map(([parentName, categories]) => ({\r\n        id: parentName,\r\n        Trigger: ({ onClick }) => (\r\n            <ParentCategory\r\n                name={parentName}\r\n                onClick={() => {\r\n                    onClick(parentName);\r\n                    setSelectedCategoryId(parentName);\r\n                }}\r\n                categories={categories}\r\n                transactions={budget.transactions}\r\n            />\r\n        ),\r\n        children: categories.map(budgetedCategory => {\r\n            const { name } = allCategories.find(category => category.id === budgetedCategory.categoryId)\r\n\r\n            return (\r\n                <CategoryItem\r\n                    key={budgetedCategory.id}\r\n                    name={name}\r\n                    item={budgetedCategory}\r\n                    transactions={budget.transactions}\r\n                />\r\n            )\r\n        })\r\n    })),\r\n        [allCategories, budget.transactions, budgetedCategoriesByParent, setSelectedCategoryId]\r\n    )\r\n\r\n    const totalSpent = useMemo(() => budget.transactions.reduce((acc, transaction) => acc + transaction.amount, 0),\r\n        [budget.transactions]\r\n    );\r\n    const restToSpent = useMemo(() => (budget.totalAmount - totalSpent), [budget.totalAmount, totalSpent]);\r\n\r\n    const amountTaken = useMemo(() => budgetedCategories.reduce((acc, budgetedCategory) => {\r\n        const categoryTransactions = budget.transactions\r\n            .filter(transaction => transaction.categoryId === budgetedCategory.id);\r\n        const categoryExpenses = categoryTransactions\r\n            .reduce((acc, transaction) => acc + transaction.amount, 0);\r\n\r\n        return acc + Math.max(categoryExpenses, budgetedCategory.budget);\r\n\r\n    }, 0),\r\n        [budgetedCategories, budget.transactions,]\r\n    )\r\n\r\n    const notBudgetedTransactions = useMemo(() => budget.transactions\r\n        .filter(transaction => {\r\n            return !budgetedCategories\r\n                .find(budgetedCategory => budgetedCategory.id === transaction.categoryId)\r\n        }),\r\n        [budget.transactions, budgetedCategories]\r\n    )\r\n    const notBudgetedExpenses = useMemo(() => notBudgetedTransactions.reduce((acc, transaction) => acc + transaction.amount, 0),\r\n        [notBudgetedTransactions]\r\n    )\r\n\r\n    const avaibleForRestCategories = useMemo(() => (budget.totalAmount - notBudgetedExpenses - amountTaken),\r\n        [budget.totalAmount, notBudgetedExpenses, amountTaken]\r\n    );\r\n\r\n\r\n    return (\r\n        <>\r\n            <div css={`\r\n            background-color: lightgray;\r\n        border-bottom: 5px solid white\r\n        `}>\r\n                <ParentCategory\r\n                    name={budget.name}\r\n                    amount={restToSpent}\r\n                    onClick={handleClearParentCategory}\r\n                />\r\n            </div>\r\n            <ToggleableList\r\n                items={listItem}\r\n                clickRef={handleClickParentCategoryRef}\r\n            />\r\n            <div css={`\r\n            background-color: lightgray;\r\n        border-top: 5px solid white\r\n        `}>\r\n                <ParentCategory\r\n                    name=\"Other categories\"\r\n                    amount={avaibleForRestCategories}\r\n                    onClick={handleSelectRestParentCategories}\r\n                />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(state => ({\r\n    budgetedCategories: state.budget.budgetedCategories,\r\n    allCategories: state.common.allCategories,\r\n    budget: state.budget.budget,\r\n}),\r\n    {\r\n        setSelectedCategoryId,\r\n    }\r\n)(BudgetCategoryList)","import {\r\n    BUDGET_GET,\r\n    BUDGETED_CATEGORIES_GET,\r\n    SET_SELECTED_CATEGORY_ID,\r\n    BUDGET_TRANSACTION_ADD,\r\n    SET_TRANSACTION_DETAILS_ID,\r\n} from 'data/constans'\r\nimport API from 'data/fetch'\r\n\r\n\r\nexport const fetchBudget = (id) => {\r\n    const promise = API.budget.fetchBudget(id);\r\n    return {\r\n        type: BUDGET_GET,\r\n        promise,\r\n    }\r\n}\r\n\r\nexport const fetchBudgetedCategories = (id) => {\r\n    const promise = API.budget.fetchBudgetedCategories(id);\r\n    return {\r\n        type: BUDGETED_CATEGORIES_GET,\r\n        promise,\r\n    }\r\n}\r\n\r\nexport const addTransaction = ({ budgetId, values }) => {\r\n    const promise = API.budget.addTransaction({\r\n        budgetId,\r\n        values,\r\n    });\r\n    return {\r\n        type: BUDGET_TRANSACTION_ADD,\r\n        promise,\r\n    }\r\n}\r\n\r\nexport const setTransacionDetails = (details) => {\r\n\r\n    return {\r\n        type: SET_TRANSACTION_DETAILS_ID,\r\n        payload: details,\r\n    }\r\n}\r\n\r\nexport const setSelectedCategoryId = (id) => {\r\n    return {\r\n        type: SET_SELECTED_CATEGORY_ID,\r\n        payload: id,\r\n    }\r\n}\r\n\r\n","//BUDGET\r\nexport const BUDGET_GET = 'BUDGET_GET';\r\nexport const BUDGET_GET_REQUEST = 'BUDGET_GET_REQUEST';\r\nexport const BUDGET_GET_SUCCESS = 'BUDGET_GET_SUCCESS';\r\nexport const BUDGET_GET_FAILURE = 'BUDGET_GET_FAILURE';\r\n\r\n//BUDGETED\r\nexport const BUDGETED_CATEGORIES_GET = 'BUDGETED_CATEGORIES_GET';\r\nexport const BUDGETED_CATEGORIES_GET_REQUEST = 'BUDGETED_CATEGORIES_GET_REQUEST';\r\nexport const BUDGETED_CATEGORIES_GET_SUCCESS = 'BUDGETED_CATEGORIES_GET_SUCCESS';\r\nexport const BUDGETED_CATEGORIES_GET_FAILURE = 'BUDGETED_CATEGORIES_GET_FAILURE';\r\n\r\nexport const SET_SELECTED_CATEGORY_ID = 'SET_SELECTED_CATEGORY_ID';\r\n\r\n// POST BUDGET TRANSACTION\r\nexport const BUDGET_TRANSACTION_ADD = 'BUDGET_TRANSACTION_ADD';\r\nexport const BUDGET_TRANSACTION_ADD_REQUEST = 'BUDGET_TRANSACTION_ADD_REQUEST';\r\nexport const BUDGET_TRANSACTION_ADD_SUCCESS = 'BUDGET_TRANSACTION_ADD_SUCCESS';\r\nexport const BUDGET_TRANSACTION_ADD_FAILURE = 'BUDGET_TRANSACTION_ADD_FAILURE';\r\n\r\nexport const SET_TRANSACTION_DETAILS_ID = 'SET_TRANSACTION_DETAILS_ID';","import styled from 'styled-components'\r\n\r\nexport const List = styled.ul`\r\n> li + li {\r\n    margin-top: 10px;\r\n}\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\nmargin-left:10px;\r\nmargin-bottom:1px;\r\nborder: 1px solid black;\r\npadding: 10px;\r\ndisplay:flex;\r\njustify-content: space-between;\r\n> *:nth-child(1) {\r\n    flex: 4;\r\n}\r\n> *:nth-child(2) {\r\n    flex: 2;\r\n}\r\n> *:nth-child(3) {\r\n    flex: 3;\r\n}\r\n> *:nth-child(4) {\r\n    flex: 1;\r\n}\r\n`","import React, { useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { List, ListItem } from './BudgetTransactionList.css';\r\nimport { groupBy } from 'lodash';\r\nimport { formatCurrency, formatDate } from 'utils/index';\r\nimport { Button } from 'components';\r\nimport { setTransacionDetails } from 'data/actions/budget.acions';\r\n\r\n\r\nfunction BudgetTransactionList({\r\n    transactions, allCategories, selectedCategoryId, budgetedCategories, setTransacionDetails,\r\n}) {\r\n\r\n\r\n    const filteredTransactionsBySelectedParentCategory = useMemo(() => {\r\n        if (typeof selectedCategoryId === 'undefined') {\r\n            return transactions;\r\n        }\r\n\r\n        if (selectedCategoryId === null) {\r\n            return transactions.filter(transaction => {\r\n                const hasBudgetedCategory = budgetedCategories.some(budgetedCategory => budgetedCategory.categoryId === transaction.categoryId);\r\n\r\n                return !hasBudgetedCategory\r\n            })\r\n\r\n        }\r\n\r\n        return transactions\r\n            .filter(transaction => {\r\n                try {\r\n                    const category = allCategories\r\n                        .find(category => category.id === transaction.categoryId);\r\n                    const parentCategoryName = category.parentCategory.name;\r\n\r\n                    return parentCategoryName === selectedCategoryId\r\n                } catch (error) {\r\n                    return false;\r\n                }\r\n\r\n            })\r\n    },\r\n        [allCategories, transactions, budgetedCategories, selectedCategoryId]\r\n    )\r\n\r\n    const groupedTransactions = useMemo(() => groupBy(filteredTransactionsBySelectedParentCategory,\r\n        transaction => new Date(transaction.date).getUTCDate()),\r\n        [filteredTransactionsBySelectedParentCategory]\r\n    )\r\n\r\n    const handleClickTransactionDetails = (id, categoryId) => {\r\n        setTransacionDetails({\r\n            identity: id,\r\n            categoryNumber: categoryId,\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <List>\r\n            {Object.entries(groupedTransactions).map(([key, transactions]) => (\r\n                <li >\r\n                    <ul >\r\n                        {transactions.map(transaction => (\r\n\r\n                            <ListItem key={transaction.id}>\r\n                                <div>{transaction.description}</div>\r\n                                <div>{formatCurrency(transaction.amount)}</div>\r\n                                <div>{formatDate(transaction.date)}</div>\r\n                                <div>{(allCategories\r\n                                    .find(category => category.id === transaction.categoryId) || {}).name}</div>\r\n                                <Button\r\n                                    to=\"/budget/transactions/details\"\r\n                                    variant='regular'\r\n                                    onClick={() => handleClickTransactionDetails(transaction.id, transaction.categoryId)}\r\n                                > Show more</Button>\r\n                            </ListItem>\r\n                        ))}\r\n\r\n                    </ul>\r\n                </li>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default connect(state => ({\r\n    transactions: state.budget.budget.transactions,\r\n    budgetedCategories: state.budget.budgetedCategories,\r\n    allCategories: state.common.allCategories,\r\n    selectedCategoryId: state.budget.selectedCategoryId,\r\n    selectedTransactionId: state.budget.selectedTransactionId,\r\n}), {\r\n    setTransacionDetails,\r\n})(BudgetTransactionList)","import styled, { css } from 'styled-components'\r\n\r\nconst btn = (light, dark) => css`\r\n  white-space: nowrap;\r\n  display: inline-block;\r\n  border-radius: 5px;\r\n  padding: 5px 15px;\r\n  font-size: 16px;\r\n  color: white;\r\n  &:visited {\r\n    color: white;\r\n  }\r\n  background-image: linear-gradient(${light}, ${dark});\r\n  border: 1px solid ${dark};\r\n  &:hover {\r\n    background-image: linear-gradient(${light}, ${dark});\r\n    &[disabled] {\r\n      background-image: linear-gradient(${light}, ${dark});\r\n    }\r\n  }\r\n  &:visited {\r\n    color: black;\r\n  }\r\n  &[disabled] {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n`\r\n\r\nconst btnDefault = css`\r\n  ${btn('#ffffff', '#d5d5d5')} color: #555;\r\n`\r\n\r\nconst btnPrimary = btn('#4f93ce', '#285f8f')\r\n\r\nexport default styled.div`\r\n  font-family: sans-serif;\r\n\r\n  h1 {\r\n    text-align: center;\r\n    color: #222;\r\n  }\r\n\r\n  & > div {\r\n    text-align: center;\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n    text-align: center;\r\n    color: #222;\r\n  }\r\n\r\n  form {\r\n    max-width: 500px;\r\n    margin: 10px auto;\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);\r\n    border-radius: 3px;\r\n\r\n    & > div {\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n      line-height: 2em;\r\n      margin: 5px;\r\n      & > label {\r\n        color: #333;\r\n        width: 110px;\r\n        font-size: 1em;\r\n        line-height: 32px;\r\n      }\r\n      & > input,\r\n      & > select,\r\n      & > textarea {\r\n        flex: 1;\r\n        padding: 3px 5px;\r\n        font-size: 1em;\r\n        margin-left: 15px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 3px;\r\n      }\r\n      & > input[type='checkbox'] {\r\n        margin-top: 7px;\r\n      }\r\n      & > div {\r\n        margin-left: 16px;\r\n        & > label {\r\n          display: block;\r\n          & > input {\r\n            margin-right: 3px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    & > .buttons {\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n      justify-content: center;\r\n      margin-top: 15px;\r\n    }\r\n    button {\r\n      margin: 0 10px;\r\n      &[type='submit'] {\r\n        ${btnPrimary};\r\n      }\r\n      &[type='button'] {\r\n        ${btnDefault};\r\n      }\r\n    }\r\n    pre {\r\n      border: 1px solid #ccc;\r\n      background: rgba(0, 0, 0, 0.1);\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n      padding: 20px;\r\n    }\r\n  }\r\n`\r\n","import React from 'react';\r\nimport { Form, Field } from 'react-final-form'\r\nimport { groupBy, noop } from 'lodash'\r\nimport { useMemo } from 'react';\r\nimport Styles from './Styles'\r\n\r\n\r\nconst required = value => (value ? undefined : 'Required')\r\n\r\nfunction AddTransactionForm({ onSubmit = noop, categories, groupCategoriesBy }) {\r\n\r\n    const groupedCategoriesByParentName = groupCategoriesBy ?\r\n        groupBy(categories, groupCategoriesBy) : null;\r\n\r\n    const listItem = useMemo(() => groupedCategoriesByParentName ?\r\n        Object.entries(groupedCategoriesByParentName).map(([parentName, categories]) => (\r\n            <optgroup key={parentName} label={parentName}>\r\n                {categories.map(category => (\r\n                    <option key={category.id} value={category.id}>{category.name}</option>\r\n                ))}\r\n            </optgroup>\r\n        )) : categories.map(category => (\r\n            <option value={category.id}>{category.name}</option>\r\n        )),\r\n        [groupedCategoriesByParentName, categories]\r\n    );\r\n\r\n\r\n    return (\r\n        <Styles>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Field name=\"description\" validate={required}>\r\n                            {({ input, meta }) => (\r\n                                <div>\r\n                                    <label>Description </label>\r\n                                    <input {...input} type=\"text\" placeholder=\"Description\" />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <Field name=\"amount\" validate={required} parse={value => parseFloat(value, 10)}>\r\n                            {({ input, meta }) => (\r\n                                <div>\r\n                                    <label>Amount</label>\r\n                                    <input {...input} type=\"number\" placeholder=\"Amount\" step='0.01' />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <Field name=\"categoryId\" validate={required}>\r\n                            {({ input, meta }) => (\r\n                                <div>\r\n                                    <label>Category</label>\r\n                                    <select {...input} type=\"text\" placeholder=\"Category\" >\r\n                                        {listItem}\r\n                                    </select>\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <Field name=\"date\" validate={required}>\r\n                            {({ input, meta }) => (\r\n                                <div>\r\n                                    <label>Date</label>\r\n                                    <input {...input} type=\"date\" placeholder=\"Date\" />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n\r\n                        <div className=\"buttons\">\r\n                            <button type=\"submit\" disabled={submitting}>\r\n                                Submit\r\n              </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={form.reset}\r\n                                disabled={submitting || pristine}\r\n                            >\r\n                                Reset\r\n              </button>\r\n                        </div>\r\n                        {/* <pre>{JSON.stringify(values, 0, 2)}</pre> */}\r\n                    </form>\r\n                )}\r\n            />\r\n        </Styles>\r\n    )\r\n}\r\nexport default AddTransactionForm;","import React from 'react';\r\n\r\nfunction ShowTransactionDetails({ transaction }) {\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                Details about transaction:\r\n        </h1>\r\n            <h2>\r\n                <p>Identity number: {transaction.identity}</p>\r\n                <p>Category number: {transaction.categoryNumber}</p>\r\n            </h2>\r\n        </>\r\n    )\r\n}\r\nexport default ShowTransactionDetails;","import styled from 'styled-components';\r\n\r\nexport const Grid = styled.div`\r\ndisplay: flex;\r\n\r\nsection:nth-child(1) {\r\nflex:4;\r\n}\r\n\r\nsection:nth-child(2) {\r\nflex:8;\r\n}\r\n`","import React, { useEffect, useMemo } from 'react';\r\nimport { fetchBudget, fetchBudgetedCategories, addTransaction } from 'data/actions/budget.acions';\r\nimport { fetchAllCategories } from 'data/actions/common.action';\r\nimport { connect } from 'react-redux';\r\nimport BudgetCategoryList from 'pages/Budget/components/BudgetCategoryList';\r\nimport BudgetTransactionList from 'pages/Budget/components/BudgetTransactionList';\r\nimport AddTransactionForm from './components/AddTransactionForm/AddTransactionForm';\r\nimport ShowTransactionDetails from './components/ShowTransactionDetails/ShowTransactionDetails';\r\nimport { Grid } from './Budget.css';\r\nimport { Button, LoadingIndicator, Modal, DetailsModal } from 'components';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\n\r\nfunction Budget({ commonState, budgetState, allCategories, budget, selectedTransactionId,\r\n    fetchBudget, fetchBudgetedCategories, fetchAllCategories, addTransaction }) {\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        fetchBudgetedCategories(1)\r\n        fetchBudget(1)\r\n        fetchAllCategories()\r\n    }, [fetchBudget, fetchBudgetedCategories, fetchAllCategories]);\r\n\r\n    const isLoaded = useMemo(() => (!!commonState && Object.keys(commonState).length === 0) && (!!budgetState && Object.keys(budgetState).length === 0),\r\n        [commonState, budgetState]\r\n    );\r\n\r\n    const handleOnSubmitAddTransaction = (values) => {\r\n        addTransaction({\r\n            budgetId: budget.id,\r\n            values: values,\r\n        }).then(() => history.goBack())\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid>\r\n                <section>\r\n                    {isLoaded ? <BudgetCategoryList /> : <LoadingIndicator></LoadingIndicator>}\r\n                </section>\r\n                <section>\r\n                    {isLoaded ? <BudgetTransactionList /> : <LoadingIndicator></LoadingIndicator>}\r\n                    <Button to=\"/budget/transactions/new\" variant=\"regular\" >Add new transaction</Button>\r\n                </section>\r\n            </Grid>\r\n\r\n            <Switch>\r\n                <Route path=\"/budget/transactions/new\">\r\n                    <Modal>\r\n                        <AddTransactionForm\r\n                            categories={allCategories}\r\n                            groupCategoriesBy={'parentCategory.name'}\r\n                            onSubmit={handleOnSubmitAddTransaction}\r\n                        />\r\n                    </Modal>\r\n                </Route>\r\n                <Route path=\"/budget/transactions/details\">\r\n                    <DetailsModal>\r\n                        <ShowTransactionDetails\r\n                            transaction={selectedTransactionId}\r\n                        />\r\n                    </DetailsModal>\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    return {\r\n        budget: state.budget.budget,\r\n        commonState: state.common.loadingState,\r\n        budgetState: state.budget.loadingState,\r\n        allCategories: state.common.allCategories,\r\n        selectedTransactionId: state.budget.selectedTransactionId,\r\n    }\r\n}, {\r\n    fetchBudget,\r\n    fetchBudgetedCategories,\r\n    fetchAllCategories,\r\n    addTransaction,\r\n})(Budget)\r\n\r\n","import {\r\n    ALL_CATEGORIES_GET,\r\n} from 'data/constans'\r\nimport API from 'data/fetch'\r\n\r\nexport const fetchAllCategories = () => {\r\n    const promise = API.common.fetchAllCategories();\r\n    return {\r\n        type: ALL_CATEGORIES_GET,\r\n        promise,\r\n    }\r\n}","//COMMON\r\nexport const ALL_CATEGORIES_GET = 'ALL_CATEGORIES_GET';\r\nexport const ALL_CATEGORIES_GET_REQUEST = 'ALL_CATEGORIES_GET_REQUEST';\r\nexport const ALL_CATEGORIES_GET_SUCCESS = 'ALL_CATEGORIES_GET_SUCCESS';\r\nexport const ALL_CATEGORIES_GET_FAILURE = 'ALL_CATEGORIES_GET_FAILURE';","import React, { Suspense } from 'react';\r\nimport './index.css';\r\nimport GlobalStyle from 'index.css'\r\nimport { Navigation, Wrapper, LoadingIndicator, Button } from 'components'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Budget from './pages/Budget'\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <Suspense fallback={<LoadingIndicator />}>\r\n      <GlobalStyle />\r\n      <Router>\r\n        <Navigation\r\n          items={\r\n            [\r\n              { content: \"HomePage\", to: \"/\" },\r\n              { content: \"BudgetPage\", to: \"/budget\" }\r\n            ]}\r\n          RightElement={(\r\n            <div>\r\n              <Button variant=\"regular\" >pl</Button>\r\n              {/* <Button variant=\"regular\">en</Button> */}\r\n            </div>\r\n          )}\r\n        />\r\n        <Wrapper>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              HomePage\r\n          </Route>\r\n            <Route path=\"/budget\">\r\n              <Budget />\r\n            </Route>\r\n          </Switch>\r\n        </Wrapper>\r\n      </Router>\r\n\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    BUDGET_GET_REQUEST,\r\n    BUDGET_GET_SUCCESS,\r\n    BUDGET_GET_FAILURE,\r\n    LOADING_STATES,\r\n    BUDGETED_CATEGORIES_GET_REQUEST,\r\n    BUDGETED_CATEGORIES_GET_SUCCESS,\r\n    BUDGETED_CATEGORIES_GET_FAILURE,\r\n    SET_SELECTED_CATEGORY_ID,\r\n    BUDGET_TRANSACTION_ADD_REQUEST,\r\n    BUDGET_TRANSACTION_ADD_SUCCESS,\r\n    SET_TRANSACTION_DETAILS_ID,\r\n} from 'data/constans'\r\n\r\n\r\nconst initialState = {\r\n    loadingState: null,\r\n    budget: {},\r\n    budgetedCategories: [],\r\n    selectedCategoryId: undefined,\r\n    selectedTransactionId: [],\r\n}\r\n\r\nfunction budget(state = initialState, action) {\r\n    const newLoadingState = { ...state.loadingState }\r\n\r\n    switch (action.type) {\r\n        case BUDGET_GET_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadingState: {\r\n                    ...state.loadingState,\r\n                    [action.type]: LOADING_STATES.LOADING,\r\n                }\r\n            }\r\n        case BUDGET_GET_SUCCESS:\r\n            delete newLoadingState.BUDGET_GET_REQUEST;\r\n\r\n            return {\r\n                ...state,\r\n                budget: action.payload,\r\n                loadingState: newLoadingState,\r\n            }\r\n        case BUDGET_GET_FAILURE:\r\n            delete newLoadingState.BUDGET_GET_REQUEST;\r\n            return {\r\n                ...state,\r\n                loadingState: LOADING_STATES.FAILED,\r\n                budget: {},\r\n            }\r\n\r\n        case BUDGETED_CATEGORIES_GET_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadingState: {\r\n                    ...state.loadingState,\r\n                    [action.type]: LOADING_STATES.LOADING,\r\n                }\r\n            }\r\n        case BUDGETED_CATEGORIES_GET_SUCCESS:\r\n            delete newLoadingState.BUDGETED_CATEGORIES_GET_REQUEST;\r\n\r\n            return {\r\n                ...state,\r\n                budgetedCategories: action.payload,\r\n                loadingState: newLoadingState,\r\n            }\r\n        case BUDGETED_CATEGORIES_GET_FAILURE:\r\n            delete newLoadingState.BUDGETED_CATEGORIES_GET_REQUEST\r\n            return {\r\n                ...state,\r\n                loadingState: LOADING_STATES.FAILED,\r\n                budgetedCategories: [],\r\n            }\r\n        case BUDGET_TRANSACTION_ADD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadingState: {\r\n                    ...state.loadingState,\r\n                    [action.type]: LOADING_STATES.LOADING,\r\n                }\r\n            }\r\n        case BUDGET_TRANSACTION_ADD_SUCCESS:\r\n            delete newLoadingState.BUDGET_TRANSACTION_ADD_REQUEST;\r\n\r\n            return {\r\n                ...state,\r\n                budget: {\r\n                    ...state.budget,\r\n                    transactions: [\r\n                        action.payload,\r\n                        ...state.budget.transactions,\r\n                    ]\r\n                },\r\n                loadingState: newLoadingState,\r\n            }\r\n        case SET_SELECTED_CATEGORY_ID:\r\n            return {\r\n                ...state,\r\n                selectedCategoryId: action.payload,\r\n            }\r\n        case SET_TRANSACTION_DETAILS_ID:\r\n            return {\r\n                ...state,\r\n                selectedTransactionId:\r\n                    action.payload,\r\n\r\n\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport default budget;\r\n","import {\r\n\r\n    ALL_CATEGORIES_GET_REQUEST,\r\n    ALL_CATEGORIES_GET_SUCCESS,\r\n    ALL_CATEGORIES_GET_FAILURE,\r\n    LOADING_STATES,\r\n} from 'data/constans'\r\n\r\nconst initialState = {\r\n    loadingState: null,\r\n    allCategories: [],\r\n}\r\n\r\nfunction common(state = initialState, action) {\r\n    const newLoadingState = { ...state.loadingState }\r\n\r\n    switch (action.type) {\r\n        case ALL_CATEGORIES_GET_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadingState: {\r\n                    ...state.loadingState,\r\n                    [action.type]: LOADING_STATES.LOADING,\r\n                }\r\n            }\r\n        case ALL_CATEGORIES_GET_SUCCESS:\r\n            delete newLoadingState.ALL_CATEGORIES_GET_REQUEST;\r\n\r\n            return {\r\n                ...state,\r\n                allCategories: action.payload,\r\n                loadingState: newLoadingState,\r\n            }\r\n        case ALL_CATEGORIES_GET_FAILURE:\r\n            delete newLoadingState.ALL_CATEGORIES_GET_REQUEST;\r\n            return {\r\n                ...state,\r\n                loadingState: LOADING_STATES.FAILED,\r\n                allCategories: [],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport default common;\r\n","import { combineReducers } from 'redux';\r\nimport budget from './budget.reducer';\r\nimport common from './common.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    budget,\r\n    common,\r\n})\r\n\r\nexport default rootReducer;","export default function promiseMiddleware() {\r\n    return function (next) {\r\n        return function (action) {\r\n            const { promise, type, ...rest } = action;\r\n\r\n            if (!promise || typeof promise.then !== 'function') {\r\n                return next(action);\r\n            }\r\n\r\n\r\n\r\n\r\n            const SUCCESS = `${type}_SUCCESS`;\r\n            const FAILURE = `${type}_FAILURE`;\r\n            const REQUEST = `${type}_REQUEST`;\r\n\r\n            next({ type: REQUEST, ...rest });\r\n\r\n            return promise\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    next({\r\n                        type: SUCCESS,\r\n                        payload: data,\r\n                        ...rest,\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    next({ type: FAILURE, error, ...rest });\r\n                })\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css.js';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './data/store'\r\n\r\n\r\nconst store = configureStore();\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n","import { applyMiddleware, createStore } from 'redux'\r\n//import thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers'\r\nimport promiseMiddleware from './middlewares/promise.middleware'\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [\r\n        //thunkMiddleware,\r\n        promiseMiddleware,\r\n    ];\r\n    const middlewareEnhancer = applyMiddleware(...middlewares)\r\n\r\n    const enhancers = [middlewareEnhancer]\r\n    const composedEnhancers = composeWithDevTools(...enhancers)\r\n\r\n    const store = createStore(rootReducer, preloadedState, composedEnhancers)\r\n\r\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\r\n    }\r\n\r\n    return store;\r\n}"],"sourceRoot":""}